define(["jquery","underscore","backbone","config","utils","text!templates/homepage.html","lib/color-gradient/color-gradient"],function(e,t,n,r,i,s,o){var u=n.View.extend({initialize:function(e){var n=this;this.collections={},this.featureLayers={},this.vent=e.vent,this.layerOptions={},t.bindAll(this,"geocodeAndSetMapLocation"),e.vent.bind("geocodeAndSetMapLocation",this.geocodeAndSetMapLocation),t.bindAll(this,"redrawMapLayer"),e.vent.bind("redrawMapLayer",this.redrawMapLayer),e.visibleMapArea&&(this.initialVisibleMapArea=e.visibleMapArea),t.bindAll(this,"toggleLayerVisibility"),e.vent.bind("toggleLayerVisibility",this.toggleLayerVisibility)},geocodeAndSetMapLocation:function(e){var t=this;geocoder=new google.maps.Geocoder,geocoder.geocode({address:e},function(n,r){console.log(n),r==google.maps.GeocoderStatus.OK?(n.type="google",t.setVisibleMapArea(n)):alert("Cannot find "+e+"! Status: "+r)})},getVisibleMapArea:function(){return{bounds:null,zoom:null}},setVisibleMapArea:function(e){},start:function(e,t){this.initialVisibleMapArea&&(this.MapAreaChangedInitially=!0,this.setVisibleMapArea(this.initialVisibleMapArea))},mapAreaChanged:function(t){var n=this;e.each(this.collections,function(e,t){var r=app.getMapLayerDeprecated(t.pointCollectionId);app.fetchMapLayer(t.pointCollectionId),n.vent.trigger("hideDetailData",t.pointCollectionId)}),this.MapAreaChangedInitially||app.navigate(app.genMapURIForVisibleArea(t)),this.MapAreaChangedInitially=!1,this.vent.trigger("updateGraphCollections",t),this.vent.trigger("mapAreaChanged",t)},redrawMapLayer:function(e){this.initFeatureLayerOptions(this.collections[e.pointCollection._id]),e.sessionOptions.visible&&this.vent.trigger("setStateType","drawing",e.pointCollectionId)},addCollection:function(e){console.log("addCollection "+e.pointCollectionId),this.collections[e.pointCollectionId]=e,e.bind("reset",this.reset,this),e.bind("add",this.addOne,this),this.addCollectionToMap(e)},addOne:function(e,t){var n=this.collections[t],r=this.collections[t].mapLayer.options,i=this.collections[t].mapLayer.pointCollection.minVal,s=this.collections[t].mapLayer.pointCollection.maxVal,o=e.get("val");o&&o.avg!=null&&(o=o.avg);var u=e.get("count"),a=(o-i)/(s-i),f=u/this.collections[t].maxReducedCount,l,c=o!=null?r.colorType:ColorType.SOLID,h;switch(c){case ColorType.SOLID:l=r.colors[0].color;break;case ColorType.LINEAR_GRADIENT:case ColorType.PALETTE:var p;switch(r.featureColorAttr){case"count":p=f;break;default:case"val.avg":p=a}l=this.layerOptions[t].colorGradient.colorAt(p,COLOR_GRADIENT_STEP)}switch(r.featureSizeAttr){default:case"count":h=f;break;case"val.avg":h=a}this.addFeatureToLayer(e,{pointCollectionId:t,color:l,darkerColor:multRGB(l,.75),min:i,max:s,model:e,data:{val:o,normVal:a,count:u},size:h},t)},addAll:function(e){var t=this,n=e.pointCollectionId;e.each(function(e){t.addOne(e,n)}),t.drawLayerForCollection(e)},reset:function(e){var t=e.pointCollectionId;this.addAll(e)},addCollectionToMap:function(e){var t=this,n=e.pointCollectionId;t.initFeatureLayerOptions(e),t.initFeatureLayer(e),t.addAll(e)},initFeatureLayerOptions:function(e){var t=e.pointCollectionId;this.layerOptions[t]={};var n=this.layerOptions[t];n.opacity=e.mapLayer.options.opacity;var r=app.getMapLayer(e.mapLayer._id);switch(e.mapLayer.options.colorType){case ColorType.PALETTE:case ColorType.LINEAR_GRADIENT:n.colorGradient=new o(r.getNormalizedColors(e.mapLayer.options.colors))}},initFeatureLayer:function(e){},addFeatureToLayer:function(e,t,n){},drawLayerForCollection:function(e){},toggleLayerVisibility:function(e,t){}});return u});