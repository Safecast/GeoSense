define(["jquery","underscore","backbone","config","utils","text!templates/map-layer-editor.html","views/panel-view-base","lib/color-gradient/color-gradient","deepextend"],function(e,t,n,r,i,s,o,u){var a={initModelInputs:function(){var t=this;this.modelInputs={},this.$(".model-input").each(function(){var n=e(this).attr("data-name")||e(this).attr("name");t.modelInputs[n]||(t.modelInputs[n]=[]),t.modelInputs[n].push(this)})},populateModelInputs:function(){for(var e in this.modelInputs){var t=this.model.get(e);this.populateModelInput(e,t)}this.isChanged=!1},populateModelInput:function(t,n){var r=this;e(r.modelInputs[t]).each(function(){e(this).is(".btn-group")?r.$(".btn",this).each(function(){e(this).val()!=n?e(this).removeClass("active"):e(this).addClass("active")}):e(this).val(n)})},getModelInputValues:function(){var t={};for(var n in this.modelInputs)t[n]=e(this.modelInputs[n]).val();var r=new this.model.__proto__.constructor(this.model.attributes,{});return r.set(t,{}),r.attributes},handleValidationErrors:function(t){var n=e.parseJSON(t.responseText);n&&n.errors&&console.error("errors:",n.errors)}},f=o.extend({className:"panel map-layer-editor",events:{"click .btn.save":"saveButtonClicked","click .btn.undo":"undoButtonClicked","click .btn.destroy":"destroyButtonClicked","click .btn.feature-type":"featureTypeClicked","change .model-input, .color-palette input, .color-palette select":"modelInputChanged","click .preview":"updateMapLayer","click .remove-color":"removeColorClicked","click .add-color":"addColorClicked"},initialize:function(e){this.template=t.template(s),this.vent=e.vent},render:function(){return f.__super__.render.call(this),this.colorRowTemplate=this.$(".color-palette tr.element-template").remove().clone().removeClass("element-template"),this.initModelInputs(),this.initSliders(),this.populateFromModel(),this},initSliders:function(){var t=this;this.$(".slider").each(function(){var n=e(this).attr("data-field");e(this).slider({min:0,max:1,range:"min",step:.05,slide:function(r,i){e(t.modelInputs[n][0]).val(i.value),t.modelInputChanged()}}),e(t.modelInputs[n][0]).change(function(){t.updateSliders()})})},updateSliders:function(){var t=this;this.$(".slider").each(function(){var n=e(this).attr("data-field");e(this).slider("value",e(t.modelInputs[n][0]).val())})},populateFromModel:function(){this.populateModelInputs(),this.$(".panel-header .title").text(this.model.get("options.title")),this.populateColorTable(),this.setButtonState(!1),this.updateSliders()},getCompleteModelInputValues:function(){var e=a.getModelInputValues.apply(this);return e.options.colors=this.getColorsFromTable(),e},undoButtonClicked:function(e){return this.populateFromModel(),this.updateMapLayer(null,!0),!1},saveButtonClicked:function(e){var t=this;return this.isChanged?(this.setButtonState(!1),this.model.save(this.getCompleteModelInputValues(),{success:function(e,n,r){console.log("saved layer options"),t.populateFromModel(),t.vent.trigger("updateMapLayer",e.attributes)},error:function(e,n,r){t.setButtonState(!0),console.log("error saving layer options"),t.handleValidationErrors(n)}}),!1):!1},destroyButtonClicked:function(e){var t=this;return window.confirm(__("Are you sure you want to delete this layer? This action cannot be reversed!"))&&(console.log("delete"),this.model.destroy()),!1},featureTypeClicked:function(t){return this.populateModelInput("options.featureType",e(t.currentTarget).val()),this.modelInputChanged(t),!1},modelInputChanged:function(e){this.isChanged=!0,this.setButtonState(this.isChanged),this.updateMapLayer()},updateMapLayer:function(e,t){(t||this.$(".preview").is(":checked"))&&this.vent.trigger("updateMapLayer",this.getCompleteModelInputValues())},setButtonState:function(t){t!=undefined&&(this.$(".btn.undo").attr("disabled",!t),this.$(".btn.save").attr("disabled",!t)),this.$(".color-palette tbody tr").length>1?this.$(".remove-color").attr("disabled",!1):this.$(".remove-color").attr("disabled",!0);var n=this.getCompleteModelInputValues().options.featureType;this.$(".feature-settings").each(function(){e(this).hasClass(n)?e(this).show():e(this).hide()})},initColorPicker:function(t,n){var r=this;e(t).miniColors("value",n),e(t).miniColors({change:function(e,t){r.modelInputChanged()}}),n||(n="#0aa5ff")},addColorRow:function(t){var t=t||{},n=this.colorRowTemplate.clone();return e("[name=position]",n).val(t.position||""),this.initColorPicker(e(".color-picker",n),t.color),e("[name=interpolation] option",n).each(function(){e(this).attr("selected",e(this).val()==t.interpolation||t.interpolation==""&&e(this).val()==u.prototype.interpolation.default)}),this.$(".color-palette tbody").append(n),n},populateColorTable:function(){var e=[],t=this;this.$(".color-palette tbody").empty();var e=this.model.get("options.colors");for(var n=0;n<e.length;n++)var r={color:e[n].color,position:e[n].position||"100%",interpolation:e[n].interpolation||""},i=this.addColorRow(r)},getColorsFromTable:function(){var t=[];return this.$(".color-palette tbody tr").each(function(){if(e(this).is(".element-template"))return;var n={color:e(".color-picker",this).val(),position:e("[name=position]",this).val(),interpolation:e("[name=interpolation]",this).val()};t.push(n)}),t},removeColorClicked:function(t){return e(t.currentTarget).attr("disabled")?!1:(e(t.currentTarget).closest("tr").remove(),this.modelInputChanged(),!1)},addColorClicked:function(e){return this.addColorRow(),this.modelInputChanged(),!1}});return t.extend(f.prototype,a),f});