define(["jquery","underscore","backbone","config","utils","mixins/timeout-queue-mixin","lib/color-gradient/color-gradient"],function(e,t,n,r,i,s,o){var u=n.View.extend({initialize:function(e){this.layers=[],this.createTimeoutQueue("visibleArea",250),this.vent=e.vent,e.visibleMapArea&&(this.initialVisibleMapArea=e.visibleMapArea)},renderMap:function(e,t){return this.initialVisibleMapArea&&this.setVisibleMapArea(this.initialVisibleMapArea),this},getVisibleMapArea:function(){return{bounds:null,zoom:null}},setVisibleMapArea:function(e){},visibleAreaChanged:function(e){var t=this;this.queueTimeout("visibleArea",function(){t.trigger("visibleAreaChanged",this,e)})},attachLayer:function(e){var t=this;this.layers.push(e),this.listenTo(e,"toggle:enabled",this.layerToggled),this.listenTo(e,"change",function(e,n){if(n.poll)return;t.layerChanged(e,n)}),this.listenTo(e,"toggle:colorScheme",this.layerChanged),this.listenTo(e.mapFeatures,"reset",this.featureReset),this.listenTo(e.mapFeatures,"add",this.featureAdd),this.listenTo(e.mapFeatures,"remove",this.featureRemove),this.listenTo(e.mapFeatures,"change",this.featureChange),this.listenTo(e,"destroy",this.destroyLayer),this.featureReset(e.mapFeatures)},layerToggled:function(e){},layerChanged:function(e,t){},drawLayer:function(e){},destroyLayer:function(e){this.layers.splice(this.layers.indexOf(e),1),this.stopListening(e),this.stopListening(e.mapFeatures)},featureReset:function(e,t){var n=this;e.each(function(r){n.featureAdd(r,e,t)}),n.drawLayer(e.mapLayer)},featureAdd:function(e,t,n){},featureRemove:function(e,t,n){},featureChange:function(e,t){}});return t.extend(u.prototype,s),u});