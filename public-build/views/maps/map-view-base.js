define(["jquery","underscore","backbone","config","utils","mixins/timeout-queue-mixin","lib/color-gradient/color-gradient"],function(e,t,n,r,i,s,o){var u=n.View.extend({initialize:function(e){this.layers=[],this.createTimeoutQueue("visibleArea",250),this.featureLayers={},this.on("feature:selected",function(e,t,n){e.trigger("feature:selected",e,t,n)}),this.on("feature:unselected",function(e,t,n){e.trigger("feature:unselected",e,t,n)})},renderMap:function(e,t){return this},getVisibleMapArea:function(){return{center:null,zoom:null,bounds:null}},setVisibleMapArea:function(e){},zoomToExtent:function(e){},visibleAreaChanged:function(e){var t=this;this.queueTimeout("visibleArea",function(){t.trigger("view:areachanged",this,e)})},updateViewBase:function(e,t){this.trigger("view:optionschanged",this)},updateViewStyle:function(e){},updateViewOptions:function(e){},attachLayer:function(e){var t=this,n=this.initFeatureLayer(e);n&&(this.featureLayers[e.id]=n,n.toggle(e.isEnabled())),this.layers.push(e),this.listenTo(e,"toggle:enabled",this.layerToggled),this.listenTo(e,"change",function(e,n){if(n.poll)return;t.layerChanged(e,n)}),this.listenTo(e,"toggle:colorScheme",this.layerChanged),this.listenTo(e,"destroy",this.destroyLayer),n&&n.featureReset(n.collection)},initFeatureLayer:function(e){},getFeatureLayer:function(e){return this.featureLayers[e.id]},layerToggled:function(e){var t=this.getFeatureLayer(e);t&&t.toggle(e.isEnabled())},layerChanged:function(e,t){},destroyLayer:function(e){this.layers.splice(this.layers.indexOf(e),1),this.stopListening(e),this.stopListening(e.mapFeatures);var t=this.featureLayers[e.id];t&&t.destroy(),delete this.featureLayers[e.id]}});return t.extend(u.prototype,s),u});