/* Copyright (c) 2006-2012 by OpenLayers Contributors (see authors.txt for 
 * full list of contributors). Published under the 2-clause BSD license.
 * See license.txt in the OpenLayers distribution or repository for the
 * full text of the license. */

OpenLayers.Format.CQL=function(){function f(e,t){return t instanceof RegExp?t.exec(e):t(e)}function l(e,n){var r,i,s=n.length;for(r=0;r<s;r++){i=n[r];var o=t[i],u=f(e,o);if(u){var a=u[0],l=e.substr(a.length).replace(/^\s*/,"");return{type:i,text:a,remainder:l}}}var c="ERROR: In parsing: ["+e+"], expected one of: ";for(r=0;r<s;r++)i=n[r],c+="\n    "+i+": "+t[i];throw new Error(c)}function c(e){var t=[],r,i=["NOT","GEOMETRY","SPATIAL","PROPERTY","LPAREN"];do{r=l(e,i),e=r.remainder,i=n[r.type];if(r.type!="END"&&!i)throw new Error("No follows list for "+r.type);t.push(r)}while(r.type!="END");return t}function h(e){function a(){var e=n.pop();switch(e.type){case"LOGICAL":var t=a(),i=a();return new OpenLayers.Filter.Logical({filters:[i,t],type:s[e.text.toUpperCase()]});case"NOT":var o=a();return new OpenLayers.Filter.Logical({filters:[o],type:OpenLayers.Filter.Logical.NOT});case"BETWEEN":var u,f,l;return n.pop(),f=a(),u=a(),l=a(),new OpenLayers.Filter.Comparison({property:l,lowerBoundary:u,upperBoundary:f,type:OpenLayers.Filter.Comparison.BETWEEN});case"COMPARISON":var c=a(),l=a();return new OpenLayers.Filter.Comparison({property:l,value:c,type:r[e.text.toUpperCase()]});case"VALUE":return/^'.*'$/.test(e.text)?e.text.substr(1,e.text.length-2):Number(e.text);case"SPATIAL":switch(e.text.toUpperCase()){case"BBOX":var h=a(),p=a(),d=a(),v=a(),m=a();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,property:m,value:OpenLayers.Bounds.fromArray([v,d,p,h])});case"INTERSECTS":var c=a(),l=a();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.INTERSECTS,property:l,value:c});case"WITHIN":var c=a(),l=a();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.WITHIN,property:l,value:c});case"CONTAINS":var c=a(),l=a();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.CONTAINS,property:l,value:c});case"DWITHIN":var g=a(),c=a(),l=a();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.DWITHIN,value:c,property:l,distance:Number(g)})};case"GEOMETRY":return OpenLayers.Geometry.fromWKT(e.text);default:return e.text}}var t=[],n=[];while(e.length){var i=e.shift();switch(i.type){case"PROPERTY":case"GEOMETRY":case"VALUE":n.push(i);break;case"COMPARISON":case"BETWEEN":case"LOGICAL":var o=u[i.type];while(t.length>0&&u[t[t.length-1].type]<=o)n.push(t.pop());t.push(i);break;case"SPATIAL":case"NOT":case"LPAREN":t.push(i);break;case"RPAREN":while(t.length>0&&t[t.length-1].type!="LPAREN")n.push(t.pop());t.pop(),t.length>0&&t[t.length-1].type=="SPATIAL"&&n.push(t.pop());case"COMMA":case"END":break;default:throw new Error("Unknown token type "+i.type)}}while(t.length>0)n.push(t.pop());var f=a();if(n.length>0){var l="Remaining tokens after building AST: \n";for(var c=n.length-1;c>=0;c--)l+=n[c].type+": "+n[c].text+"\n";throw new Error(l)}return f}var e=["PROPERTY","COMPARISON","VALUE","LOGICAL"],t={PROPERTY:/^[_a-zA-Z]\w*/,COMPARISON:/^(=|<>|<=|<|>=|>|LIKE)/i,COMMA:/^,/,LOGICAL:/^(AND|OR)/i,VALUE:/^('\w+'|\d+(\.\d*)?|\.\d+)/,LPAREN:/^\(/,RPAREN:/^\)/,SPATIAL:/^(BBOX|INTERSECTS|DWITHIN|WITHIN|CONTAINS)/i,NOT:/^NOT/i,BETWEEN:/^BETWEEN/i,GEOMETRY:function(e){var t=/^(POINT|LINESTRING|POLYGON|MULTIPOINT|MULTILINESTRING|MULTIPOLYGON|GEOMETRYCOLLECTION)/.exec(e);if(t){var n=e.length,r=e.indexOf("(",t[0].length);if(r>-1){var i=1;while(r<n&&i>0){r++;switch(e.charAt(r)){case"(":i++;break;case")":i--;break;default:}}}return[e.substr(0,r+1)]}},END:/^$/},n={LPAREN:["GEOMETRY","SPATIAL","PROPERTY","VALUE","LPAREN"],RPAREN:["NOT","LOGICAL","END","RPAREN"],PROPERTY:["COMPARISON","BETWEEN","COMMA"],BETWEEN:["VALUE"],COMPARISON:["VALUE"],COMMA:["GEOMETRY","VALUE","PROPERTY"],VALUE:["LOGICAL","COMMA","RPAREN","END"],SPATIAL:["LPAREN"],LOGICAL:["NOT","VALUE","SPATIAL","PROPERTY","LPAREN"],NOT:["PROPERTY","LPAREN"],GEOMETRY:["COMMA","RPAREN"]},r={"=":OpenLayers.Filter.Comparison.EQUAL_TO,"<>":OpenLayers.Filter.Comparison.NOT_EQUAL_TO,"<":OpenLayers.Filter.Comparison.LESS_THAN,"<=":OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO,">":OpenLayers.Filter.Comparison.GREATER_THAN,">=":OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO,LIKE:OpenLayers.Filter.Comparison.LIKE,BETWEEN:OpenLayers.Filter.Comparison.BETWEEN},i={},s={AND:OpenLayers.Filter.Logical.AND,OR:OpenLayers.Filter.Logical.OR},o={},u={RPAREN:3,LOGICAL:2,COMPARISON:1},a;for(a in r)r.hasOwnProperty(a)&&(i[r[a]]=a);for(a in s)s.hasOwnProperty(a)&&(o[s[a]]=a);return OpenLayers.Class(OpenLayers.Format,{read:function(e){var t=h(c(e));return this.keepData&&(this.data=t),t},write:function(e){if(e instanceof OpenLayers.Geometry)return e.toString();switch(e.CLASS_NAME){case"OpenLayers.Filter.Spatial":switch(e.type){case OpenLayers.Filter.Spatial.BBOX:return"BBOX("+e.property+","+e.value.toBBOX()+")";case OpenLayers.Filter.Spatial.DWITHIN:return"DWITHIN("+e.property+", "+this.write(e.value)+", "+e.distance+")";case OpenLayers.Filter.Spatial.WITHIN:return"WITHIN("+e.property+", "+this.write(e.value)+")";case OpenLayers.Filter.Spatial.INTERSECTS:return"INTERSECTS("+e.property+", "+this.write(e.value)+")";case OpenLayers.Filter.Spatial.CONTAINS:return"CONTAINS("+e.property+", "+this.write(e.value)+")";default:throw new Error("Unknown spatial filter type: "+e.type)};case"OpenLayers.Filter.Logical":if(e.type==OpenLayers.Filter.Logical.NOT)return"NOT ("+this.write(e.filters[0])+")";var t="(",n=!0;for(var r=0;r<e.filters.length;r++)n?n=!1:t+=") "+o[e.type]+" (",t+=this.write(e.filters[r]);return t+")";case"OpenLayers.Filter.Comparison":return e.type==OpenLayers.Filter.Comparison.BETWEEN?e.property+" BETWEEN "+this.write(e.lowerBoundary)+" AND "+this.write(e.upperBoundary):e.property+" "+i[e.type]+" "+this.write(e.value);case undefined:if(typeof e=="string")return"'"+e+"'";if(typeof e=="number")return String(e);default:throw new Error("Can't encode: "+e.CLASS_NAME+" "+e)}},CLASS_NAME:"OpenLayers.Format.CQL"})}();