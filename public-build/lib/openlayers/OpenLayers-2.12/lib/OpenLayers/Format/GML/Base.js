/* Copyright (c) 2006-2012 by OpenLayers Contributors (see authors.txt for 
 * full list of contributors). Published under the 2-clause BSD license.
 * See license.txt in the OpenLayers distribution or repository for the
 * full text of the license. */

OpenLayers.Format.GML||(OpenLayers.Format.GML={}),OpenLayers.Format.GML.Base=OpenLayers.Class(OpenLayers.Format.XML,{namespaces:{gml:"http://www.opengis.net/gml",xlink:"http://www.w3.org/1999/xlink",xsi:"http://www.w3.org/2001/XMLSchema-instance",wfs:"http://www.opengis.net/wfs"},defaultPrefix:"gml",schemaLocation:null,featureType:null,featureNS:null,geometryName:"geometry",extractAttributes:!0,srsName:null,xy:!0,geometryTypes:null,singleFeatureType:null,regExes:{trimSpace:/^\s*|\s*$/g,removeSpace:/\s*/g,splitSpace:/\s+/,trimComma:/\s*,\s*/g,featureMember:/^(.*:)?featureMembers?$/},initialize:function(e){OpenLayers.Format.XML.prototype.initialize.apply(this,[e]),this.setGeometryTypes(),e&&e.featureNS&&this.setNamespace("feature",e.featureNS),this.singleFeatureType=!e||typeof e.featureType=="string"},read:function(e){typeof e=="string"&&(e=OpenLayers.Format.XML.prototype.read.apply(this,[e])),e&&e.nodeType==9&&(e=e.documentElement);var t=[];this.readNode(e,{features:t},!0);if(t.length==0){var n=this.getElementsByTagNameNS(e,this.namespaces.gml,"featureMember");if(n.length)for(var r=0,i=n.length;r<i;++r)this.readNode(n[r],{features:t},!0);else{var n=this.getElementsByTagNameNS(e,this.namespaces.gml,"featureMembers");n.length&&this.readNode(n[0],{features:t},!0)}}return t},readNode:function(e,t,n){return n===!0&&this.autoConfig===!0&&(this.featureType=null,delete this.namespaceAlias[this.featureNS],delete this.namespaces.feature,this.featureNS=null),!this.featureNS&&!(e.prefix in this.namespaces)&&e.parentNode.namespaceURI==this.namespaces["gml"]&&this.regExes.featureMember.test(e.parentNode.nodeName)&&(this.featureType=e.nodeName.split(":").pop(),this.setNamespace("feature",e.namespaceURI),this.featureNS=e.namespaceURI,this.autoConfig=!0),OpenLayers.Format.XML.prototype.readNode.apply(this,[e,t])},readers:{gml:{featureMember:function(e,t){this.readChildNodes(e,t)},featureMembers:function(e,t){this.readChildNodes(e,t)},name:function(e,t){t.name=this.getChildValue(e)},boundedBy:function(e,t){var n={};this.readChildNodes(e,n),n.components&&n.components.length>0&&(t.bounds=n.components[0])},Point:function(e,t){var n={points:[]};this.readChildNodes(e,n),t.components||(t.components=[]),t.components.push(n.points[0])},coordinates:function(e,t){var n=this.getChildValue(e).replace(this.regExes.trimSpace,"");n=n.replace(this.regExes.trimComma,",");var r=n.split(this.regExes.splitSpace),i,s=r.length,o=new Array(s);for(var u=0;u<s;++u)i=r[u].split(","),this.xy?o[u]=new OpenLayers.Geometry.Point(i[0],i[1],i[2]):o[u]=new OpenLayers.Geometry.Point(i[1],i[0],i[2]);t.points=o},coord:function(e,t){var n={};this.readChildNodes(e,n),t.points||(t.points=[]),t.points.push(new OpenLayers.Geometry.Point(n.x,n.y,n.z))},X:function(e,t){t.x=this.getChildValue(e)},Y:function(e,t){t.y=this.getChildValue(e)},Z:function(e,t){t.z=this.getChildValue(e)},MultiPoint:function(e,t){var n={components:[]};this.readChildNodes(e,n),t.components=[new OpenLayers.Geometry.MultiPoint(n.components)]},pointMember:function(e,t){this.readChildNodes(e,t)},LineString:function(e,t){var n={};this.readChildNodes(e,n),t.components||(t.components=[]),t.components.push(new OpenLayers.Geometry.LineString(n.points))},MultiLineString:function(e,t){var n={components:[]};this.readChildNodes(e,n),t.components=[new OpenLayers.Geometry.MultiLineString(n.components)]},lineStringMember:function(e,t){this.readChildNodes(e,t)},Polygon:function(e,t){var n={outer:null,inner:[]};this.readChildNodes(e,n),n.inner.unshift(n.outer),t.components||(t.components=[]),t.components.push(new OpenLayers.Geometry.Polygon(n.inner))},LinearRing:function(e,t){var n={};this.readChildNodes(e,n),t.components=[new OpenLayers.Geometry.LinearRing(n.points)]},MultiPolygon:function(e,t){var n={components:[]};this.readChildNodes(e,n),t.components=[new OpenLayers.Geometry.MultiPolygon(n.components)]},polygonMember:function(e,t){this.readChildNodes(e,t)},GeometryCollection:function(e,t){var n={components:[]};this.readChildNodes(e,n),t.components=[new OpenLayers.Geometry.Collection(n.components)]},geometryMember:function(e,t){this.readChildNodes(e,t)}},feature:{"*":function(e,t){var n,r=e.localName||e.nodeName.split(":").pop();t.features?!this.singleFeatureType&&OpenLayers.Util.indexOf(this.featureType,r)!==-1?n="_typeName":r===this.featureType&&(n="_typeName"):e.childNodes.length==0||e.childNodes.length==1&&e.firstChild.nodeType==3?this.extractAttributes&&(n="_attribute"):n="_geometry",n&&this.readers.feature[n].apply(this,[e,t])},_typeName:function(e,t){var n={components:[],attributes:{}};this.readChildNodes(e,n),n.name&&(n.attributes.name=n.name);var r=new OpenLayers.Feature.Vector(n.components[0],n.attributes);this.singleFeatureType||(r.type=e.nodeName.split(":").pop(),r.namespace=e.namespaceURI);var i=e.getAttribute("fid")||this.getAttributeNS(e,this.namespaces.gml,"id");i&&(r.fid=i),this.internalProjection&&this.externalProjection&&r.geometry&&r.geometry.transform(this.externalProjection,this.internalProjection),n.bounds&&(r.bounds=n.bounds),t.features.push(r)},_geometry:function(e,t){this.geometryName||(this.geometryName=e.nodeName.split(":").pop()),this.readChildNodes(e,t)},_attribute:function(e,t){var n=e.localName||e.nodeName.split(":").pop(),r=this.getChildValue(e);t.attributes[n]=r}},wfs:{FeatureCollection:function(e,t){this.readChildNodes(e,t)}}},write:function(e){var t;OpenLayers.Util.isArray(e)?t="featureMembers":t="featureMember";var n=this.writeNode("gml:"+t,e);return this.setAttributeNS(n,this.namespaces.xsi,"xsi:schemaLocation",this.schemaLocation),OpenLayers.Format.XML.prototype.write.apply(this,[n])},writers:{gml:{featureMember:function(e){var t=this.createElementNSPlus("gml:featureMember");return this.writeNode("feature:_typeName",e,t),t},MultiPoint:function(e){var t=this.createElementNSPlus("gml:MultiPoint"),n=e.components||[e];for(var r=0,i=n.length;r<i;++r)this.writeNode("pointMember",n[r],t);return t},pointMember:function(e){var t=this.createElementNSPlus("gml:pointMember");return this.writeNode("Point",e,t),t},MultiLineString:function(e){var t=this.createElementNSPlus("gml:MultiLineString"),n=e.components||[e];for(var r=0,i=n.length;r<i;++r)this.writeNode("lineStringMember",n[r],t);return t},lineStringMember:function(e){var t=this.createElementNSPlus("gml:lineStringMember");return this.writeNode("LineString",e,t),t},MultiPolygon:function(e){var t=this.createElementNSPlus("gml:MultiPolygon"),n=e.components||[e];for(var r=0,i=n.length;r<i;++r)this.writeNode("polygonMember",n[r],t);return t},polygonMember:function(e){var t=this.createElementNSPlus("gml:polygonMember");return this.writeNode("Polygon",e,t),t},GeometryCollection:function(e){var t=this.createElementNSPlus("gml:GeometryCollection");for(var n=0,r=e.components.length;n<r;++n)this.writeNode("geometryMember",e.components[n],t);return t},geometryMember:function(e){var t=this.createElementNSPlus("gml:geometryMember"),n=this.writeNode("feature:_geometry",e);return t.appendChild(n.firstChild),t}},feature:{_typeName:function(e){var t=this.createElementNSPlus("feature:"+this.featureType,{attributes:{fid:e.fid}});e.geometry&&this.writeNode("feature:_geometry",e.geometry,t);for(var n in e.attributes){var r=e.attributes[n];r!=null&&this.writeNode("feature:_attribute",{name:n,value:r},t)}return t},_geometry:function(e){this.externalProjection&&this.internalProjection&&(e=e.clone().transform(this.internalProjection,this.externalProjection));var t=this.createElementNSPlus("feature:"+this.geometryName),n=this.geometryTypes[e.CLASS_NAME],r=this.writeNode("gml:"+n,e,t);return this.srsName&&r.setAttribute("srsName",this.srsName),t},_attribute:function(e){return this.createElementNSPlus("feature:"+e.name,{value:e.value})}},wfs:{FeatureCollection:function(e){var t=this.createElementNSPlus("wfs:FeatureCollection");for(var n=0,r=e.length;n<r;++n)this.writeNode("gml:featureMember",e[n],t);return t}}},setGeometryTypes:function(){this.geometryTypes={"OpenLayers.Geometry.Point":"Point","OpenLayers.Geometry.MultiPoint":"MultiPoint","OpenLayers.Geometry.LineString":"LineString","OpenLayers.Geometry.MultiLineString":"MultiLineString","OpenLayers.Geometry.Polygon":"Polygon","OpenLayers.Geometry.MultiPolygon":"MultiPolygon","OpenLayers.Geometry.Collection":"GeometryCollection"}},CLASS_NAME:"OpenLayers.Format.GML.Base"});