Ext.ns("App"),Ext.regModel("Geonames",{fields:["countryName","toponymName","name","lat","lng"]}),App.SearchFormPopupPanel=Ext.extend(Ext.Panel,{map:null,floating:!0,modal:!0,centered:!0,hideOnMaskTap:!0,width:Ext.is.Phone?undefined:400,height:Ext.is.Phone?undefined:400,scroll:!1,layout:"fit",fullscreen:Ext.is.Phone?!0:undefined,url:"http://ws.geonames.org/searchJSON?",errorText:"Sorry, we had problems communicating with geonames.org. Please try again.",errorTitle:"Communication error",maxResults:6,featureClass:"P",createStore:function(){this.store=new Ext.data.Store({model:"Geonames",proxy:{type:"scripttag",timeout:5e3,listeners:{exception:function(){this.hide(),Ext.Msg.alert(this.errorTitle,this.errorText,Ext.emptyFn)},scope:this},url:this.url,reader:{type:"json",root:"geonames"}}})},doSearch:function(e,t){var n=e.getValue();this.store.load({params:{featureClass:this.featureClass,maxRows:this.maxResults,name_startsWith:encodeURIComponent(n)}})},onItemTap:function(e,t,n,r){var i=this.store.getAt(t),s=i.get("lng"),o=i.get("lat"),u=new OpenLayers.LonLat(s,o);map.setCenter(u.transform(gg,sm),12),this.hide("pop")},initComponent:function(){this.createStore(),this.resultList=new Ext.List({scroll:"vertical",cls:"searchList",loadingText:"Searching ...",store:this.store,itemTpl:"<div>{name} ({countryName})</div>",listeners:{itemtap:this.onItemTap,scope:this}}),this.formContainer=new Ext.form.FormPanel({scroll:!1,items:[{xtype:"button",cls:"close-btn",ui:"decline-small",text:"Close",handler:function(){this.hide()},scope:this},{xtype:"fieldset",scroll:!1,title:"Search for a place",items:[{xtype:"searchfield",label:"Search",placeHolder:"placename",listeners:{action:this.doSearch,scope:this}},this.resultList]}]}),this.items=[{xtype:"panel",layout:"fit",items:[this.formContainer]}],App.SearchFormPopupPanel.superclass.initComponent.call(this)}}),App.LayerList=Ext.extend(Ext.List,{map:null,createStore:function(){Ext.regModel("Layer",{fields:["id","name","visibility","zindex"]});var e=[];return Ext.each(this.map.layers,function(t){if(t.displayInLayerSwitcher===!0){var n=t.isBaseLayer?this.map.baseLayer==t:t.getVisibility();e.push({id:t.id,name:t.name,visibility:n,zindex:t.getZIndex()})}}),new Ext.data.Store({model:"Layer",sorters:"zindex",data:e})},initComponent:function(){this.store=this.createStore(),this.itemTpl=new Ext.XTemplate('<tpl if="visibility == true">','<img width="20" src="img/check-round-green.png">',"</tpl>",'<tpl if="visibility == false">','<img width="20" src="img/check-round-grey.png">',"</tpl>",'<span class="gx-layer-item">{name}</span>'),this.listeners={itemtap:function(e,t,n,r){var i=e.getStore().getAt(t),s=this.map.getLayersBy("id",i.get("id"))[0];s.isBaseLayer?this.map.setBaseLayer(s):s.setVisibility(!s.getVisibility()),i.set("visibility",s.getVisibility())}},this.map.events.on({changelayer:this.onChangeLayer,scope:this}),App.LayerList.superclass.initComponent.call(this)},findLayerRecord:function(e){var t;return this.store.each(function(n){n.get("id")===e.id&&(t=n)},this),t},onChangeLayer:function(e){if(e.property=="visibility"){var t=this.findLayerRecord(e.layer);t.set("visibility",e.layer.getVisibility())}}}),Ext.reg("app_layerlist",App.LayerList);