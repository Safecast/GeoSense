/* Copyright (c) 2006-2013 by OpenLayers Contributors (see authors.txt for
 * full list of contributors). Published under the 2-clause BSD license.
 * See license.txt in the OpenLayers distribution or repository for the
 * full text of the license. */

OpenLayers.Layer.Vector=OpenLayers.Class(OpenLayers.Layer,{isBaseLayer:!1,isFixed:!1,features:null,filter:null,selectedFeatures:null,unrenderedFeatures:null,reportError:!0,style:null,styleMap:null,strategies:null,protocol:null,renderers:["SVG","VML","Canvas"],renderer:null,rendererOptions:null,geometryType:null,drawn:!1,ratio:1,initialize:function(e,t){OpenLayers.Layer.prototype.initialize.apply(this,arguments),(!this.renderer||!this.renderer.supported())&&this.assignRenderer();if(!this.renderer||!this.renderer.supported())this.renderer=null,this.displayError();this.styleMap||(this.styleMap=new OpenLayers.StyleMap),this.features=[],this.selectedFeatures=[],this.unrenderedFeatures={};if(this.strategies)for(var n=0,r=this.strategies.length;n<r;n++)this.strategies[n].setLayer(this)},destroy:function(){if(this.strategies){var e,t,n;for(t=0,n=this.strategies.length;t<n;t++)e=this.strategies[t],e.autoDestroy&&e.destroy();this.strategies=null}this.protocol&&(this.protocol.autoDestroy&&this.protocol.destroy(),this.protocol=null),this.destroyFeatures(),this.features=null,this.selectedFeatures=null,this.unrenderedFeatures=null,this.renderer&&this.renderer.destroy(),this.renderer=null,this.geometryType=null,this.drawn=null,OpenLayers.Layer.prototype.destroy.apply(this,arguments)},clone:function(e){e==null&&(e=new OpenLayers.Layer.Vector(this.name,this.getOptions())),e=OpenLayers.Layer.prototype.clone.apply(this,[e]);var t=this.features,n=t.length,r=new Array(n);for(var i=0;i<n;++i)r[i]=t[i].clone();return e.features=r,e},refresh:function(e){this.calculateInRange()&&this.visibility&&this.events.triggerEvent("refresh",e)},assignRenderer:function(){for(var e=0,t=this.renderers.length;e<t;e++){var n=this.renderers[e],r=typeof n=="function"?n:OpenLayers.Renderer[n];if(r&&r.prototype.supported()){this.renderer=new r(this.div,this.rendererOptions);break}}},displayError:function(){this.reportError&&OpenLayers.Console.userError(OpenLayers.i18n("browserNotSupported",{renderers:this.renderers.join("\n")}))},setMap:function(e){OpenLayers.Layer.prototype.setMap.apply(this,arguments);if(!this.renderer)this.map.removeLayer(this);else{this.renderer.map=this.map;var t=this.map.getSize();t.w=t.w*this.ratio,t.h=t.h*this.ratio,this.renderer.setSize(t)}},afterAdd:function(){if(this.strategies){var e,t,n;for(t=0,n=this.strategies.length;t<n;t++)e=this.strategies[t],e.autoActivate&&e.activate()}},removeMap:function(e){this.drawn=!1;if(this.strategies){var t,n,r;for(n=0,r=this.strategies.length;n<r;n++)t=this.strategies[n],t.autoActivate&&t.deactivate()}},onMapResize:function(){OpenLayers.Layer.prototype.onMapResize.apply(this,arguments);var e=this.map.getSize();e.w=e.w*this.ratio,e.h=e.h*this.ratio,this.renderer.setSize(e)},moveTo:function(e,t,n){OpenLayers.Layer.prototype.moveTo.apply(this,arguments);var r=!0;if(!n){this.renderer.root.style.visibility="hidden";var i=this.map.getSize(),s=i.w,o=i.h,u=s/2*this.ratio-s/2,a=o/2*this.ratio-o/2;u+=this.map.layerContainerOriginPx.x,u=-Math.round(u),a+=this.map.layerContainerOriginPx.y,a=-Math.round(a),this.div.style.left=u+"px",this.div.style.top=a+"px";var f=this.map.getExtent().scale(this.ratio);r=this.renderer.setExtent(f,t),this.renderer.root.style.visibility="visible",OpenLayers.IS_GECKO===!0&&(this.div.scrollLeft=this.div.scrollLeft);if(!t&&r)for(var l in this.unrenderedFeatures){var c=this.unrenderedFeatures[l];this.drawFeature(c)}}if(!this.drawn||t||!r){this.drawn=!0;var c;for(var l=0,h=this.features.length;l<h;l++)this.renderer.locked=l!==h-1,c=this.features[l],this.drawFeature(c)}},display:function(e){OpenLayers.Layer.prototype.display.apply(this,arguments);var t=this.div.style.display;t!=this.renderer.root.style.display&&(this.renderer.root.style.display=t)},addFeatures:function(e,t){OpenLayers.Util.isArray(e)||(e=[e]);var n=!t||!t.silent;if(n){var r={features:e},i=this.events.triggerEvent("beforefeaturesadded",r);if(i===!1)return;e=r.features}var s=[];for(var o=0,u=e.length;o<u;o++){o!=e.length-1?this.renderer.locked=!0:this.renderer.locked=!1;var a=e[o];if(!(!this.geometryType||a.geometry instanceof this.geometryType))throw new TypeError("addFeatures: component should be an "+this.geometryType.prototype.CLASS_NAME);a.layer=this,!a.style&&this.style&&(a.style=OpenLayers.Util.extend({},this.style));if(n){if(this.events.triggerEvent("beforefeatureadded",{feature:a})===!1)continue;this.preFeatureInsert(a)}s.push(a),this.features.push(a),this.drawFeature(a),n&&(this.events.triggerEvent("featureadded",{feature:a}),this.onFeatureInsert(a))}n&&this.events.triggerEvent("featuresadded",{features:s})},removeFeatures:function(e,t){if(!e||e.length===0)return;if(e===this.features)return this.removeAllFeatures(t);OpenLayers.Util.isArray(e)||(e=[e]),e===this.selectedFeatures&&(e=e.slice());var n=!t||!t.silent;n&&this.events.triggerEvent("beforefeaturesremoved",{features:e});for(var r=e.length-1;r>=0;r--){r!=0&&e[r-1].geometry?this.renderer.locked=!0:this.renderer.locked=!1;var i=e[r];delete this.unrenderedFeatures[i.id],n&&this.events.triggerEvent("beforefeatureremoved",{feature:i}),this.features=OpenLayers.Util.removeItem(this.features,i),i.layer=null,i.geometry&&this.renderer.eraseFeatures(i),OpenLayers.Util.indexOf(this.selectedFeatures,i)!=-1&&OpenLayers.Util.removeItem(this.selectedFeatures,i),n&&this.events.triggerEvent("featureremoved",{feature:i})}n&&this.events.triggerEvent("featuresremoved",{features:e})},removeAllFeatures:function(e){var t=!e||!e.silent,n=this.features;t&&this.events.triggerEvent("beforefeaturesremoved",{features:n});var r;for(var i=n.length-1;i>=0;i--)r=n[i],t&&this.events.triggerEvent("beforefeatureremoved",{feature:r}),r.layer=null,t&&this.events.triggerEvent("featureremoved",{feature:r});this.renderer.clear(),this.features=[],this.unrenderedFeatures={},this.selectedFeatures=[],t&&this.events.triggerEvent("featuresremoved",{features:n})},destroyFeatures:function(e,t){var n=e==undefined;n&&(e=this.features);if(e){this.removeFeatures(e,t);for(var r=e.length-1;r>=0;r--)e[r].destroy()}},drawFeature:function(e,t){if(!this.drawn)return;if(typeof t!="object"){!t&&e.state===OpenLayers.State.DELETE&&(t="delete");var n=t||e.renderIntent;t=e.style||this.style,t||(t=this.styleMap.createSymbolizer(e,n))}var r=this.renderer.drawFeature(e,t);r===!1||r===null?this.unrenderedFeatures[e.id]=e:delete this.unrenderedFeatures[e.id]},eraseFeatures:function(e){this.renderer.eraseFeatures(e)},getFeatureFromEvent:function(e){if(!this.renderer)throw new Error("getFeatureFromEvent called on layer with no renderer. This usually means you destroyed a layer, but not some handler which is associated with it.");var t=null,n=this.renderer.getFeatureIdFromEvent(e);return n&&(typeof n=="string"?t=this.getFeatureById(n):t=n),t},getFeatureBy:function(e,t){var n=null;for(var r=0,i=this.features.length;r<i;++r)if(this.features[r][e]==t){n=this.features[r];break}return n},getFeatureById:function(e){return this.getFeatureBy("id",e)},getFeatureByFid:function(e){return this.getFeatureBy("fid",e)},getFeaturesByAttribute:function(e,t){var n,r,i=this.features.length,s=[];for(n=0;n<i;n++)r=this.features[n],r&&r.attributes&&r.attributes[e]===t&&s.push(r);return s},onFeatureInsert:function(e){},preFeatureInsert:function(e){},getDataExtent:function(){var e=null,t=this.features;if(t&&t.length>0){var n=null;for(var r=0,i=t.length;r<i;r++)n=t[r].geometry,n&&(e===null&&(e=new OpenLayers.Bounds),e.extend(n.getBounds()))}return e},CLASS_NAME:"OpenLayers.Layer.Vector"});