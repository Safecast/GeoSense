/* Copyright (c) 2006-2013 by OpenLayers Contributors (see authors.txt for
 * full list of contributors). Published under the 2-clause BSD license.
 * See license.txt in the OpenLayers distribution or repository for the
 * full text of the license. */

OpenLayers.Layer.ArcIMS=OpenLayers.Class(OpenLayers.Layer.Grid,{DEFAULT_PARAMS:{ClientVersion:"9.2",ServiceName:""},featureCoordSys:"4326",filterCoordSys:"4326",layers:null,async:!0,name:"ArcIMS",isBaseLayer:!0,DEFAULT_OPTIONS:{tileSize:new OpenLayers.Size(512,512),featureCoordSys:"4326",filterCoordSys:"4326",layers:null,isBaseLayer:!0,async:!0,name:"ArcIMS"},initialize:function(e,t,n){this.tileSize=new OpenLayers.Size(512,512),this.params=OpenLayers.Util.applyDefaults({ServiceName:n.serviceName},this.DEFAULT_PARAMS),this.options=OpenLayers.Util.applyDefaults(n,this.DEFAULT_OPTIONS),OpenLayers.Layer.Grid.prototype.initialize.apply(this,[e,t,this.params,n]),this.transparent&&(this.isBaseLayer||(this.isBaseLayer=!1),this.format=="image/jpeg"&&(this.format=OpenLayers.Util.alphaHack()?"image/gif":"image/png")),this.options.layers===null&&(this.options.layers=[])},getURL:function(e){var t="";e=this.adjustBounds(e);var n=new OpenLayers.Format.ArcXML(OpenLayers.Util.extend(this.options,{requesttype:"image",envelope:e.toArray(),tileSize:this.tileSize})),r=new OpenLayers.Request.POST({url:this.getFullRequestString(),data:n.write(),async:!1});if(r!=null){var i=r.responseXML;if(!i||!i.documentElement)i=r.responseText;var s=new OpenLayers.Format.ArcXML,o=s.read(i);t=this.getUrlOrImage(o.image.output)}return t},getURLasync:function(e,t,n){e=this.adjustBounds(e);var r=new OpenLayers.Format.ArcXML(OpenLayers.Util.extend(this.options,{requesttype:"image",envelope:e.toArray(),tileSize:this.tileSize}));OpenLayers.Request.POST({url:this.getFullRequestString(),async:!0,data:r.write(),callback:function(e){var r=e.responseXML;if(!r||!r.documentElement)r=e.responseText;var i=new OpenLayers.Format.ArcXML,s=i.read(r);t.call(n,this.getUrlOrImage(s.image.output))},scope:this})},getUrlOrImage:function(e){var t="";return e.url?t=e.url:e.data&&(t="data:image/"+e.type+";base64,"+e.data),t},setLayerQuery:function(e,t){for(var n=0;n<this.options.layers.length;n++)if(e==this.options.layers[n].id){this.options.layers[n].query=t;return}this.options.layers.push({id:e,visible:!0,query:t})},getFeatureInfo:function(e,t,n){var r=n.buffer||1,i=n.callback||function(){},s=n.scope||window,o={};OpenLayers.Util.extend(o,this.options),o.requesttype="feature",e instanceof OpenLayers.LonLat?(o.polygon=null,o.envelope=[e.lon-r,e.lat-r,e.lon+r,e.lat+r]):e instanceof OpenLayers.Geometry.Polygon&&(o.envelope=null,o.polygon=e);var u=new OpenLayers.Format.ArcXML(o);OpenLayers.Util.extend(u.request.get_feature,n),u.request.get_feature.layer=t.id;if(typeof t.query.accuracy=="number")u.request.get_feature.query.accuracy=t.query.accuracy;else{var a=this.map.getCenter(),f=this.map.getViewPortPxFromLonLat(a);f.x++;var l=this.map.getLonLatFromPixel(f);u.request.get_feature.query.accuracy=l.lon-a.lon}u.request.get_feature.query.where=t.query.where,u.request.get_feature.query.spatialfilter.relation="area_intersection",OpenLayers.Request.POST({url:this.getFullRequestString({CustomService:"Query"}),data:u.write(),callback:function(e){var t=u.parseResponse(e.responseText);u.iserror()?i.call(s,null):i.call(s,t.features)}})},clone:function(e){return e==null&&(e=new OpenLayers.Layer.ArcIMS(this.name,this.url,this.getOptions())),e=OpenLayers.Layer.Grid.prototype.clone.apply(this,[e]),e},CLASS_NAME:"OpenLayers.Layer.ArcIMS"});