/* Copyright (c) 2006-2013 by OpenLayers Contributors (see authors.txt for
 * full list of contributors). Published under the 2-clause BSD license.
 * See license.txt in the OpenLayers distribution or repository for the
 * full text of the license. */

OpenLayers.Strategy.Cluster=OpenLayers.Class(OpenLayers.Strategy,{distance:20,threshold:null,features:null,clusters:null,clustering:!1,resolution:null,activate:function(){var e=OpenLayers.Strategy.prototype.activate.call(this);return e&&this.layer.events.on({beforefeaturesadded:this.cacheFeatures,featuresremoved:this.clearCache,moveend:this.cluster,scope:this}),e},deactivate:function(){var e=OpenLayers.Strategy.prototype.deactivate.call(this);return e&&(this.clearCache(),this.layer.events.un({beforefeaturesadded:this.cacheFeatures,featuresremoved:this.clearCache,moveend:this.cluster,scope:this})),e},cacheFeatures:function(e){var t=!0;return this.clustering||(this.clearCache(),this.features=e.features,this.cluster(),t=!1),t},clearCache:function(){this.clustering||(this.features=null)},cluster:function(e){if((!e||e.zoomChanged)&&this.features){var t=this.layer.map.getResolution();if(t!=this.resolution||!this.clustersExist()){this.resolution=t;var n=[],r,i,s;for(var o=0;o<this.features.length;++o){r=this.features[o];if(r.geometry){i=!1;for(var u=n.length-1;u>=0;--u){s=n[u];if(this.shouldCluster(s,r)){this.addToCluster(s,r),i=!0;break}}i||n.push(this.createCluster(this.features[o]))}}this.clustering=!0,this.layer.removeAllFeatures(),this.clustering=!1;if(n.length>0){if(this.threshold>1){var a=n.slice();n=[];var f;for(var o=0,l=a.length;o<l;++o)f=a[o],f.attributes.count<this.threshold?Array.prototype.push.apply(n,f.cluster):n.push(f)}this.clustering=!0,this.layer.addFeatures(n),this.clustering=!1}this.clusters=n}}},clustersExist:function(){var e=!1;if(this.clusters&&this.clusters.length>0&&this.clusters.length==this.layer.features.length){e=!0;for(var t=0;t<this.clusters.length;++t)if(this.clusters[t]!=this.layer.features[t]){e=!1;break}}return e},shouldCluster:function(e,t){var n=e.geometry.getBounds().getCenterLonLat(),r=t.geometry.getBounds().getCenterLonLat(),i=Math.sqrt(Math.pow(n.lon-r.lon,2)+Math.pow(n.lat-r.lat,2))/this.resolution;return i<=this.distance},addToCluster:function(e,t){e.cluster.push(t),e.attributes.count+=1},createCluster:function(e){var t=e.geometry.getBounds().getCenterLonLat(),n=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(t.lon,t.lat),{count:1});return n.cluster=[e],n},CLASS_NAME:"OpenLayers.Strategy.Cluster"});