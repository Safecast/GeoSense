define(["jquery","underscore","backbone","deepextend","deepmodel"],function(e,t,n){var r=n.DeepModel.extend({idAttribute:"_id",initialize:function(){},getNumericVal:function(){var e=this.collection.mapLayer.getOption("attrMap",{});return e.numeric?this.get(e.numeric):undefined},getCenter:function(){var e=this.getSize();return[this.attributes.bbox[0]+e[0]/2,this.attributes.bbox[1]+e[1]/2]},getSize:function(){return[this.attributes.bbox[2]-this.attributes.bbox[0],this.attributes.bbox[3]-this.attributes.bbox[1]]},getBox:function(){var e=this.getSize(),t=e[0]/2,n=e[1]/2,r=this.getCenter(),i=r[0]-t,s=r[1]-n,o=r[0]+t,u=r[1]+n;return[[o,s],[i,s],[i,u],[o,u]]},getRenderAttributes:function(){var e=this.collection.mapLayer,t=e.getLayerOptions(),n=this.collection.mapLayer.getOption("attrMap",{}),r=e.getMappedExtremes(),i=e.getCounts(),s=this.getNumericVal(),o=r.numeric?r.numeric.max:NaN,u=r.numeric?r.numeric.min:NaN;s&&s.avg!=null&&(s=s.avg);var a=this.attributes.count||1,f=(s-u)/(o-u),l=a/i.max,c,h;switch(t.colorType){default:switch(n.featureColor){case"count":c=e.colorAt(l);break;default:case"val.avg":c=e.colorAt(isNaN(f)?0:f)}}switch(n.featureSize){default:case"count":h=l;break;case"$numeric.avg":h=f}return{color:c,darkerColor:multRGB(c,.75),model:this,data:{val:s,normVal:f,count:a},size:h}}});return r});